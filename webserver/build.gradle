/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    //Project Lombok
    id "io.freefair.lombok" version "6.4.1"

    //Javafx plugin for use of JavaFX and FXML
    id 'org.openjfx.javafxplugin' version '0.0.12'



}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // use javalin for front end web
    implementation 'io.javalin:javalin:4.3.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'io.javalin', name: 'javalin', version: '4.3.0'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.31'

    implementation project(":backend") //Lets us use our backend objects.

}

application {
    // Define the main class for the application.
    mainClass = 'UML.Diagrammer.webserver.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml']
}


