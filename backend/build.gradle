/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the library plugin
    id 'java-library'
    // Apply the license plugin
    id "com.github.hierynomus.license-base" version "0.16.1"

    id 'jacoco'

    // ActiveJDBC
    id "java"
    // Current version is 2.0.1, downgraded for now to stop comipler vomit while we find the issue with activejdbc imports
    id "de.schablinski.activejdbc-gradle-plugin" version "1.3"

}

//activejdbc.toolVersion = '2.3'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // project lombok compile processor
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    // project lombok test processor
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    
    implementation group: 'org.javalite', name: 'activejdbc', version: '2.3.2-j8'
    
    compileOnly 'org.javalite:activejdbc:1.4.1'
    compileOnly 'org.javalite:activejdbc-instrumentation:1.4.1'
    
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
    }
}
license {
    header = rootProject.file('LICENSE')
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}